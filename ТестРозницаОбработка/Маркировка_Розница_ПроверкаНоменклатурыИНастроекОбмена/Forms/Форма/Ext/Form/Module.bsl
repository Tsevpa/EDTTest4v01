
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьВерсиюСервиса();
	ЗаполнитьУчет();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиЭлементовФормы

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ОчиститьВсеПоля();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОчистка(Элемент, СтандартнаяОбработка)
	
	ОчиститьВсеПоля();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьОсобенностиУчета(Команда)
	
	Если Не ЗначениеЗаполнено(Номенклатура) Тогда
		ТекстСообщения = "Укажите номенклатуру!";
		Сообщить(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ПолучитьДанныеНоменклатурыСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеНоменклатурыСервер()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.ТабачнаяПродукция КАК ТабачнаяПродукция,
	               |	Номенклатура.ОбувнаяПродукция КАК ОбувнаяПродукция,
	               |	Номенклатура.ЛекарственныеПрепараты КАК ЛекарственныеПрепараты,
	               |	Номенклатура.ОсобенностьУчета КАК ОсобенностьУчета,
	               |	ВидыНоменклатуры.Ссылка КАК ВидНоменклатуры,
	               |	Номенклатура.ТипНоменклатуры КАК ТипНоменклатуры,
	               |	ВидыНоменклатуры.ОсобенностьУчета КАК ОсобенностьУчета1,
	               |	ВидыНоменклатуры.ТабачнаяПродукция КАК ТабачнаяПродукция1,
	               |	ВидыНоменклатуры.ОбувнаяПродукция КАК ОбувнаяПродукция1,
	               |	ВидыНоменклатуры.ЛекарственныеПрепараты КАК ЛекарственныеПрепараты1,
	               |	ВидыНоменклатуры.ТипНоменклатуры КАК ТипНоменклатуры1
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыНоменклатуры КАК ВидыНоменклатуры
	               |		ПО Номенклатура.ВидНоменклатуры = ВидыНоменклатуры.Ссылка
	               |ГДЕ
	               |	Номенклатура.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл	
	
		НоменклатураОсобенностьУчета = Выборка.ОсобенностьУчета;
		НоменклатураТипНоменклатуры  = Выборка.ТипНоменклатуры;
		НоменклатураВидНоменклатуры  = Выборка.ВидНоменклатуры;	
		
		НоменклатураОбувнаяПродукция 		= Выборка.ОбувнаяПродукция;
		НоменклатураТабачнаяПродукция 		= Выборка.ТабачнаяПродукция;
		НоменклатураЛекарственныеПрепараты = Выборка.ЛекарственныеПрепараты;
		
		ВидНоменклатурыОсобенностьУчета = Выборка.ОсобенностьУчета1;
		ВидНоменклатурыТипНоменклатуры	 = Выборка.ТипНоменклатуры1;
		
		ВидНоменклатурыТабачнаяПродукция 	   = Выборка.ТабачнаяПродукция1;
		ВидНоменклатурыОбувнаяПродукция 	   = Выборка.ОбувнаяПродукция1;
		ВидНоменклатурыЛекарственныеПрепараты = Выборка.ЛекарственныеПрепараты1;

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьУчетИСМПиМОТП(Команда)
	
	ОтключитьРосКонстантыУчетаМаркировки();
	
КонецПроцедуры

&НаСервере
Процедура ОтключитьРосКонстантыУчетаМаркировки()
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиУчетТабачнойПродукцииМОТП") <> Неопределено Тогда
		Константы.ВестиУчетТабачнойПродукцииМОТП.Установить(Ложь);
	КонецЕсли;
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиУчетОбувнойПродукцииИСМП") <> Неопределено Тогда
		Константы.ВестиУчетОбувнойПродукцииИСМП.Установить(Ложь);
	КонецЕсли;
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиСведенияДляДекларацийПоАлкогольнойПродукции") <> Неопределено Тогда
		Константы.ВестиСведенияДляДекларацийПоАлкогольнойПродукции.Установить(Ложь);
	КонецЕсли;
	
	ЗаполнитьУчет();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОчиститьВсеПоля()
	
	НоменклатураОсобенностьУчета = Неопределено;
	НоменклатураТипНоменклатуры  = Неопределено;
	НоменклатураВидНоменклатуры  = Неопределено;	
	
	НоменклатураОбувнаяПродукция 		= Ложь;
	НоменклатураТабачнаяПродукция 		= Ложь;
	НоменклатураЛекарственныеПрепараты = Ложь;
	
	ВидНоменклатурыОсобенностьУчета = Неопределено;
	ВидНоменклатурыТипНоменклатуры	 = Неопределено;
	
	ВидНоменклатурыТабачнаяПродукция 	   = Ложь;
	ВидНоменклатурыОбувнаяПродукция 	   = Ложь;
	ВидНоменклатурыЛекарственныеПрепараты = Ложь;
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьУчет()
	
	//неиспользуемые 
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиУчетТабачнойПродукцииМОТП") <> Неопределено Тогда
		ВестиУчетТабачнойПродукцииМОТП = Константы.ВестиУчетТабачнойПродукцииМОТП.Получить();
	КонецЕсли;
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.УдалитьВестиУчетМаркировкиТабачнойПродукции") <> Неопределено Тогда
		УдалитьВестиУчетМаркировкиТабачнойПродукции = Константы.УдалитьВестиУчетМаркировкиТабачнойПродукции.Получить();
	КонецЕсли;	
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиУчетОбувнойПродукцииИСМП") <> Неопределено Тогда
		ВестиУчетОбувнойПродукцииИСМП = Константы.ВестиУчетОбувнойПродукцииИСМП.Получить();
	КонецЕсли;				
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.УдалитьВестиУчетМаркировкиОбувнойПродукции") <> Неопределено Тогда
		УдалитьВестиУчетМаркировкиОбувнойПродукции = Константы.УдалитьВестиУчетМаркировкиОбувнойПродукции.Получить();
	КонецЕсли;
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиСведенияДляДекларацийПоАлкогольнойПродукции") <> Неопределено Тогда
		ВестиСведенияДляДекларацийПоАлкогольнойПродукции = Константы.ВестиСведенияДляДекларацийПоАлкогольнойПродукции.Получить();
	КонецЕсли;
		
	//СЕРВИС
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиУчетМаркируемойОбувиИСМПТК") <> Неопределено Тогда
		НаборКонстантВестиУчетМаркируемойОбувиИСМПТК = Константы.ВестиУчетМаркируемойОбувиИСМПТК.Получить();
	КонецЕсли;
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиУчетМаркируемогоТабакаИСМПТК") <> Неопределено Тогда
		НаборКонстантВестиУчетМаркируемогоТабакаИСМПТК = Константы.ВестиУчетМаркируемогоТабакаИСМПТК.Получить();
	КонецЕсли;	
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиУчетМаркируемыхЛекарствИСМПТК") <> Неопределено Тогда
		НаборКонстантВестиУчетМаркируемыхЛекарствИСМПТК = Константы.ВестиУчетМаркируемыхЛекарствИСМПТК.Получить();
	КонецЕсли;				
	
	Если Метаданные.НайтиПоПолномуИмени("Константа.ВестиУчетМаркируемойПродукцииИСМПТК") <> Неопределено Тогда
		НаборКонстантВестиУчетМаркируемойПродукцииИСМПТК = Константы.ВестиУчетМаркируемойПродукцииИСМПТК.Получить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВерсиюСервиса()
	

	Информация = ПолучитьИнформациюОСервисе();
	ВерсияСервиса    = Информация.Основная;
	ВерсияБиблиотеки = Информация.Библиотека;
		
КонецПроцедуры

Функция ПолучитьИнформациюОСервисе()
	
	УстановитьПривилегированныйРежим(Истина);
	
	//ИмяОсновнойПодсистемы = "РозницаДляКазахстана";	
	ИмяОсновнойПодсистемы = "РозницаДляКазахстана_Маркировка_ИнтеграцияИСМПТ";
		
	ТекстОбщий = "ВЫБРАТЬ
	|	ВерсииПодсистем.Версия КАК Версия
	|ИЗ
	|	РегистрСведений.ВерсииПодсистем КАК ВерсииПодсистем
	|ГДЕ
	|	ВерсииПодсистем.ИмяПодсистемы = &ИмяПодсистемы";
					
	//Основная подсистема
	ЗапросОсновная = Новый Запрос();
	ЗапросОсновная.Текст = ТекстОбщий;
	ЗапросОсновная.УстановитьПараметр("ИмяПодсистемы", ИмяОсновнойПодсистемы);
	РезультатОсновная = ЗапросОсновная.Выполнить().Выбрать();
	Если Не РезультатОсновная.Количество() = 0 Тогда
		Пока РезультатОсновная.Следующий() Цикл
			ВерсияОсновнойПодсистемы = РезультатОсновная.Версия;
			Прервать;
		КонецЦикла;
	Иначе                                  
		ВерсияОсновнойПодсистемы = "0.0.0.0";
	КонецЕсли;
	
	//Подсистема библиотеки
	ЗапросБиблиотека = Новый Запрос();
	ЗапросБиблиотека.Текст = ТекстОбщий;
	ЗапросБиблиотека.УстановитьПараметр("ИмяПодсистемы", "Маркировка_ИнтеграцияИСМПТ"); //Имя библиотеки стандартное
	РезультатБиблиотека = ЗапросБиблиотека.Выполнить().Выбрать();
	Если Не РезультатБиблиотека.Количество() = 0 Тогда
		Пока РезультатБиблиотека.Следующий() Цикл
			ВерсияБиблиотечнойПодсистемы = РезультатБиблиотека.Версия;
			Прервать;
		КонецЦикла;
	Иначе                                  
		ВерсияБиблиотечнойПодсистемы = "0.0.0.0";
	КонецЕсли;
	
	Информация = Новый Структура();
	Информация.Вставить("Основная",   	ВерсияОсновнойПодсистемы);
	Информация.Вставить("Библиотека", 	ВерсияБиблиотечнойПодсистемы);
	Информация.Вставить("Конфигурация", Метаданные.Синоним);
	
	Возврат Информация;
	
КонецФункции

#КонецОбласти
